do local Players=game:GetService("Players");local LocalPlayer=Players.LocalPlayer;local VirtualUser=game:GetService("VirtualUser");local ReplicatedStorage=game:GetService("ReplicatedStorage");local TweenService=game:GetService("TweenService");local UserInputService=game:GetService("UserInputService");local RunService=game:GetService("RunService");local vim=game:GetService("VirtualInputManager");local Fluent=loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))();local SaveManager=loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))();local InterfaceManager=loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))();local player=Players.LocalPlayer;local spawnRemote=nil;pcall(function() spawnRemote=ReplicatedStorage:WaitForChild("Connections"):WaitForChild("Spawn");end);local Window=Fluent:CreateWindow({Title="One Piece Mythical "   .. Fluent.Version ,SubTitle="by Rabbit",TabWidth=160,Size=UDim2.fromOffset(580,460),Acrylic=true,Theme="Dark",MinimizeKey=Enum.KeyCode.LeftControl});local Tabs={Main=Window:AddTab({Title="Main",Icon=""}),Misc=Window:AddTab({Title="Misc",Icon=""}),Fruits=Window:AddTab({Title="Fruits",Icon=""}),Map=Window:AddTab({Title="Map",Icon=""}),Players=Window:AddTab({Title="Players",Icon=""}),Settings=Window:AddTab({Title="Settings",Icon=""})};local Options=Fluent.Options;local chestThread=nil;local autoClaimSamThread=nil;local fruitEspEnabled=false;local States={Misc={AutoChest=false},Fruit={AutoClaimSam=false,SamDelay=1,FruitESP=false},Player={FlightEnabled=false,FlightSpeed=200}};local flyConnection=nil;local FlightToggle=Tabs.Players:AddToggle("Flight",{Title="Flight",Default=false});local FlightSlider=Tabs.Players:AddSlider("FlightSpeed",{Title="Flight Speed",Default=200,Min=100,Max=1000,Rounding=0});FlightSlider:OnChanged(function(Value) States.Player.FlightSpeed=Value;end);FlightToggle:OnChanged(function(Value) States.Player.FlightEnabled=Value;if Value then if flyConnection then flyConnection:Disconnect();end flyConnection=RunService.RenderStepped:Connect(function() if ( not player.Character or  not player.Character:FindFirstChild("HumanoidRootPart")) then return;end local hrp=player.Character.HumanoidRootPart;local camCF=workspace.CurrentCamera.CFrame;local moveDir=Vector3.new();if UserInputService:IsKeyDown(Enum.KeyCode.W) then moveDir+=camCF.LookVector end if UserInputService:IsKeyDown(Enum.KeyCode.S) then moveDir-=camCF.LookVector end if UserInputService:IsKeyDown(Enum.KeyCode.A) then moveDir-=camCF.RightVector end if UserInputService:IsKeyDown(Enum.KeyCode.D) then moveDir+=camCF.RightVector end if UserInputService:IsKeyDown(Enum.KeyCode.Space) then moveDir+=Vector3.new(0,1,0) end if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then moveDir-=Vector3.new(0,1,0) end hrp.Velocity=((moveDir.Magnitude>0) and (moveDir.Unit * States.Player.FlightSpeed)) or Vector3.new(0,0,0) ;end);else if flyConnection then flyConnection:Disconnect();flyConnection=nil;end if (player.Character and player.Character:FindFirstChild("HumanoidRootPart")) then player.Character.HumanoidRootPart.Velocity=Vector3.new(0,0,0);end end end);local RareFruitsList={"Candy","Phoenix","Quake","Magma","Gas","Rumble","Flare","Quake","Luck","Hot","Dark","Plasma","Chilly Fruit","Slip","Smelt","Rare Box","Venom Fruit","UltraRare Box"};States.Fruit.AutoBringFruits={};local function BringFruit(fruitTool) local char=player.Character;if  not (char and char:FindFirstChild("HumanoidRootPart")) then return;end fruitTool.Handle.CFrame=char.HumanoidRootPart.CFrame * CFrame.new(0,2,0) ;task.wait(0.2);if char:FindFirstChild("Humanoid") then char.Humanoid:EquipTool(fruitTool);end task.wait(0.5);local Backpack=player:FindFirstChild("Backpack");if (Backpack and (fruitTool.Parent==Backpack)) then local remote=ReplicatedStorage:FindFirstChild("StoreFruit");if remote then pcall(function() remote:FireServer(fruitTool);end);else local chest=workspace:FindFirstChild("FruitChest");if (chest and chest:FindFirstChild("ClickDetector")) then fireclickdetector(chest.ClickDetector);end end end end local bringThread=nil;local function StartBringThread() if bringThread then return;end bringThread=task.spawn(function() while true do local active=false;for _,enabled in pairs(States.Fruit.AutoBringFruits) do if enabled then active=true;break;end end if  not active then task.wait(1);continue;end for _,v in pairs(workspace:GetChildren()) do if (v:IsA("Tool") and v:FindFirstChild("Handle")) then for fruitName,enabled in pairs(States.Fruit.AutoBringFruits) do if (enabled and string.find(v.Name,fruitName)) then BringFruit(v);end end end end task.wait(1);end end);end for _,fruitName in ipairs(RareFruitsList) do States.Fruit.AutoBringFruits[fruitName]=false;local tgl=Tabs.Fruits:AddToggle("Bring_"   .. fruitName ,{Title="Auto Bring "   .. fruitName ,Default=false});tgl:OnChanged(function(Value) States.Fruit.AutoBringFruits[fruitName]=Value;StartBringThread();end);end local function createFruitESP(fruit) if  not fruit:IsDescendantOf(workspace) then return;end if fruit:FindFirstChild("FruitESP") then return;end local target=fruit:FindFirstChild("Handle") or fruit.PrimaryPart or (fruit:IsA("BasePart") and fruit) ;if  not target then return;end local billboard=Instance.new("BillboardGui");billboard.Name="FruitESP";billboard.Size=UDim2.new(0,200,0,50);billboard.AlwaysOnTop=true;billboard.Adornee=target;billboard.StudsOffset=Vector3.new(0,3,0);billboard.Parent=fruit;local label=Instance.new("TextLabel",billboard);label.Size=UDim2.new(1,0,1,0);label.BackgroundTransparency=1;label.TextColor3=Color3.fromRGB(255,255,255);label.TextStrokeTransparency=0;label.Font=Enum.Font.GothamBold;label.TextScaled=false;label.TextSize=25;task.spawn(function() while billboard.Parent and fruitEspEnabled  do if (player.Character and player.Character:FindFirstChild("HumanoidRootPart") and target) then local dist=(target.Position-player.Character.HumanoidRootPart.Position).Magnitude;label.Text=string.format("%s\n%.0f",fruit.Name,dist);end task.wait(0.3);end if billboard then billboard:Destroy();end end);end local function StartFruitESP() for _,fruit in ipairs(workspace:GetDescendants()) do if (fruit:IsA("Model") and fruit.Name:match("Fruit")) then createFruitESP(fruit);end end workspace.DescendantAdded:Connect(function(obj) if (fruitEspEnabled and obj:IsA("Model") and obj.Name:match("Fruit")) then createFruitESP(obj);end end);end local FruitESP_Toggle=Tabs.Fruits:AddToggle("FruitESP",{Title="Devil Fruit Location",Default=false});FruitESP_Toggle:OnChanged(function(Value) fruitEspEnabled=Value;States.Fruit.FruitESP=Value;if Value then StartFruitESP();else for _,v in ipairs(workspace:GetDescendants()) do if (v:IsA("BillboardGui") and (v.Name=="FruitESP")) then v:Destroy();end end end end);local function StartChestThread() if chestThread then task.cancel(chestThread);end chestThread=task.spawn(function() while States.Misc.AutoChest do local chests=workspace:FindFirstChild("Chests");if (chests and player.Character and player.Character:FindFirstChild("HumanoidRootPart")) then for _,chest in ipairs(chests:GetChildren()) do if  not States.Misc.AutoChest then break;end if (chest:IsA("Model") and chest.PrimaryPart) then player.Character.HumanoidRootPart.CFrame=chest.PrimaryPart.CFrame + Vector3.new( -1, -1,0) ;task.wait(0.001);end end end task.wait(1);end end);end local ToggleChest=Tabs.Misc:AddToggle("AutoChest",{Title="Auto Chest",Default=false});ToggleChest:OnChanged(function(Value) States.Misc.AutoChest=Value;if Value then StartChestThread();elseif chestThread then task.cancel(chestThread);chestThread=nil;end end);local function StartAutoClaimSam() if autoClaimSamThread then return;end autoClaimSamThread=task.spawn(function() local RemoteContainer=ReplicatedStorage:FindFirstChild("Connections");if  not RemoteContainer then return;end local ClaimRemote=RemoteContainer:FindFirstChild("Claim_Sam");if  not ClaimRemote then return;end while States.Fruit.AutoClaimSam do pcall(function() ClaimRemote:FireServer("Claim1");end);task.wait(States.Fruit.SamDelay or 1 );end autoClaimSamThread=nil;end);end local SamToggle=Tabs.Main:AddToggle("AutoSam",{Title="Auto Sam",Default=false});SamToggle:OnChanged(function(Value) States.Fruit.AutoClaimSam=Value;if Value then StartAutoClaimSam();end end);local tpLocations={Afk=CFrame.new( -32.6,200003,195),Sam=CFrame.new( -1302,218, -1352),["Desert Island (Sword)"]=CFrame.new(1231,224, -3242),["Pyramid Island (AF)"]=CFrame.new(120,278,4946),["Fish-Man Island"]=CFrame.new( -1693,216, -328),["Đảo Tím"]=CFrame.new( -5282,534, -7762),["Snow Islands Main"]=CFrame.new(6313,541, -1330),["Snow Islands (Gun)"]=CFrame.new( -1843,222,3406),["Krizma Islands"]=CFrame.new( -1074,361,1671),["Bar Islands"]=CFrame.new(1502,260,2173),["Vokun Islands"]=CFrame.new(4572,217,5059),["Treehouse Islands"]=CFrame.new(1120,217,3351),Quest=CFrame.new(898,270,1219),BigTree=CFrame.new( -6029,402, -8.5)};local locationNames={};for name,_ in pairs(tpLocations) do table.insert(locationNames,name);end local TPDropdown=Tabs.Map:AddDropdown("TPDropdown",{Title="Teleport Locations",Values=locationNames,Multi=false});TPDropdown:OnChanged(function(Value) local target=tpLocations[Value];if (target and player.Character and player.Character:FindFirstChild("HumanoidRootPart")) then local noclipConnection;noclipConnection=RunService.Stepped:Connect(function() if player.Character then for _,part in pairs(player.Character:GetDescendants()) do if part:IsA("BasePart") then part.CanCollide=false;end end end end);task.wait(0.1);player.Character.HumanoidRootPart.CFrame=target;task.wait(0.2);if noclipConnection then noclipConnection:Disconnect();end end end);SaveManager:SetLibrary(Fluent);InterfaceManager:SetLibrary(Fluent);SaveManager:IgnoreThemeSettings();InterfaceManager:SetFolder("FluentScriptHub");SaveManager:SetFolder("FluentScriptHub/specific-game");InterfaceManager:BuildInterfaceSection(Tabs.Settings);SaveManager:BuildConfigSection(Tabs.Settings);Window:SelectTab(1);SaveManager:LoadAutoloadConfig();Fluent:Notify({Title="Inject Script Enable",Content="Good Luck for you.",Duration=8}); end
